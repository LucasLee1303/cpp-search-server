/*Задание 1
В коде поисковой системы документы должны быть отсортированы по убыванию релевантности. Напишите функцию-компаратор, которую нужно передать в такую сортировку.
Функция должна называться HasDocumentGreaterRelevance.
Как будет тестироваться ваш код
Тренажёр проверит, что функция HasDocumentGreaterRelevance возвращает истинное значение тогда и только тогда, когда первый переданный ей документ имеет 
релевантность выше, чем второй.
Возьмите в качестве шаблона компаратор для сортировки по возрастанию id:
bool HasDocumentLessId(const Document& lhs, const Document& rhs) {
    return lhs.id < rhs.id;
} 
Замените id на relevance. Не только в коде, но и в названии!
Сортируйте не по возрастанию, а по убыванию релевантности: замените < на > и отразите это в названии.
*/

struct Document {
    int id;
    int relevance;
};

bool/*возвращаемое значение*/ HasDocumentGreaterRelevance(const Document& lhs, const Document& rhs/* параметры функции */) {
    return lhs.relevance > rhs.relevance /* условие, при котором первый объект будет в векторе раньше второго */;
}

int main() 
{
    
}
