/*
Задание
Напишите программу. Она должна определять, будет ли палиндромом текст, введённый пользователем в первой строке стандартного ввода. 
Гарантируется, что текст содержит только строчные буквы английского алфавита и пробелы. Пробелы в любом количестве могут стоять в начале и в конце строки, 
а также между словами. Пусть программа их игнорирует. Если строка пустая или состоит только из пробелов, она не считается палиндромом.
Если текст окажется палиндромом, программа должна вывести строку palindrome. Если нет — not a palindrome.
Примеры палиндромов: radar, never odd or even.
Примеры строк, которые не будут палиндромами: apple, kick.
Перед отправкой кода на проверку проведите ручное тестирование, как мы делали в уроке.

Составьте план тестирования до написания кода. Не пытайтесь сразу создать программу, решающую задачу полностью. 
Следуйте плану тестирования и двигайтесь маленькими итерациями:
напишите код для прохождения теста в самой простой ситуации,
доработайте программу так, чтобы она проходила два теста, затем три.
При тестировании не забывайте обработать граничные условия — пустые строки и строки из одних пробелов.
*/
#include <iostream>
#include <string>

using namespace std;

// Определяет, будет ли слово палиндромом
// text может быть строкой, содержащей строчные буквы английского алфавита и пробелы
// Пустые строки и строки, состоящие только из пробелов, - это не палиндромы
bool IsPalindrome(const string& text) {
	// Напишите недостающий код
	
	if (text.empty())
		return false;
    
     if (text == " ")
          return false;

	for (auto b = text.begin(), e = text.end() - 1; b < e; ++b, --e)
	{
		while (!isalnum(*b)) ++b;
		while (!isalnum(*e)) --e;
		if (toupper(*b) != toupper(*e)) return false;
	}
	return true;
}

int main() {
	string text;
	getline(cin, text);

	if (IsPalindrome(text)) {

		cout << "palindrome"s << endl;
	}
	else {
		cout << "not a palindrome"s << endl;
	}

}
